#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:
#+LATEX_HEADER:
#+LATEX_HEADER_EXTRA:
#+DESCRIPTION:
#+KEYWORDS:
#+SUBTITLE:
#+LATEX_COMPILER: pdflatex
#+DATE: \today

#+STARTUP: hidestars content context

* vifm

  Двухпанельный файловый менеджер с управлением приближенным к vim.

  
* Конфигурация
  :LOGBOOK:
  CLOCK: [2019-02-06 Wed 19:47]--[2019-02-06 Wed 20:10] =>  0:23
  :END:
  
** Структура директории с конфигурацией vifm

   #+BEGIN_SRC shell :results scalar
     tree ~/.config/vifm
   #+END_SRC

   #+RESULTS:
   #+begin_example
   /home/eto/.config/vifm
   ├── colors
   │   └── Default.vifm
   ├── scripts
   │   └── README
   ├── vifm-help.txt
   ├── vifminfo
   └── vifmrc

   2 directories, 5 files
   #+end_example

  
*** colors/Default.vifm

    Файл Default.vifm содержит настройки внешнего вида фм. В частности, расцветки

**** Дефолтное содержание файла
     
     #+BEGIN_SRC shell :results scalar
       cat ~/.config/vifm/colors/Default.vifm
     #+END_SRC

     #+RESULTS:
     #+begin_example
     " You can edit this file by hand.
     " The " character at the beginning of a line comments out the line.
     " Blank lines are ignored.

     " The Default color scheme is used for any directory that does not have
     " a specified scheme and for parts of user interface like menus. A
     " color scheme set for a base directory will also
     " be used for the sub directories.

     " The standard ncurses colors are:
     " Default = -1 = None, can be used for transparency or default color
     " Black = 0
     " Red = 1
     " Green = 2
     " Yellow = 3
     " Blue = 4
     " Magenta = 5
     " Cyan = 6
     " White = 7

     " Light versions of colors are also available (set bold attribute):
     " LightBlack
     " LightRed
     " LightGreen
     " LightYellow
     " LightBlue
     " LightMagenta
     " LightCyan
     " LightWhite

     " Available attributes (some of them can be combined):
     " bold
     " underline
     " reverse or inverse
     " standout
     " italic (on unsupported systems becomes reverse)
     " none

     " Vifm supports 256 colors you can use color numbers 0-255
     " (requires properly set up terminal: set your TERM environment variable
     " (directly or using resources) to some color terminal name (e.g.
     " xterm-256color) from /usr/lib/terminfo/; you can check current number
     " of colors in your terminal with tput colors command)

     " highlight group cterm=attrs ctermfg=foreground_color ctermbg=background_color

     highlight clear

     highlight Win cterm=none ctermfg=white ctermbg=black
     highlight Directory cterm=bold ctermfg=cyan ctermbg=default
     highlight Link cterm=bold ctermfg=yellow ctermbg=default
     highlight BrokenLink cterm=bold ctermfg=red ctermbg=default
     highlight Socket cterm=bold ctermfg=magenta ctermbg=default
     highlight Device cterm=bold ctermfg=red ctermbg=default
     highlight Fifo cterm=bold ctermfg=cyan ctermbg=default
     highlight Executable cterm=bold ctermfg=green ctermbg=default
     highlight Selected cterm=bold ctermfg=magenta ctermbg=default
     highlight CurrLine cterm=bold,reverse ctermfg=default ctermbg=default
     highlight TopLine cterm=none ctermfg=black ctermbg=white
     highlight TopLineSel cterm=bold ctermfg=black ctermbg=default
     highlight StatusLine cterm=bold ctermfg=black ctermbg=white
     highlight WildMenu cterm=underline,reverse ctermfg=white ctermbg=black
     highlight CmdLine cterm=none ctermfg=white ctermbg=black
     highlight ErrorMsg cterm=none ctermfg=red ctermbg=black
     highlight Border cterm=none ctermfg=black ctermbg=white
     highlight JobLine cterm=bold,reverse ctermfg=black ctermbg=white
     highlight SuggestBox cterm=bold ctermfg=default ctermbg=default
     highlight CmpMismatch cterm=bold ctermfg=white ctermbg=red
     highlight AuxWin cterm=bold,underline,reverse,standout,italic ctermfg=default ctermbg=default
     highlight TabLine cterm=none ctermfg=white ctermbg=black
     highlight TabLineSel cterm=bold,reverse ctermfg=default ctermbg=default
     highlight User1 cterm=bold,underline,reverse,standout,italic ctermfg=default ctermbg=default
     highlight User2 cterm=bold,underline,reverse,standout,italic ctermfg=default ctermbg=default
     highlight User3 cterm=bold,underline,reverse,standout,italic ctermfg=default ctermbg=default
     highlight User4 cterm=bold,underline,reverse,standout,italic ctermfg=default ctermbg=default
     highlight User5 cterm=bold,underline,reverse,standout,italic ctermfg=default ctermbg=default
     highlight User6 cterm=bold,underline,reverse,standout,italic ctermfg=default ctermbg=default
     highlight User7 cterm=bold,underline,reverse,standout,italic ctermfg=default ctermbg=default
     highlight User8 cterm=bold,underline,reverse,standout,italic ctermfg=default ctermbg=default
     highlight User9 cterm=bold,underline,reverse,standout,italic ctermfg=default ctermbg=default
     #+end_example

**** кастомное содержание файла

     
*** scripts

    Директория scripts для пользовательских скриптов.
    Например, скрипта по отображению картинок.

    
*** vifmrc

    Комментарии в файле конфигурации начинаются с символа "

**** необхожимый начальный необработанный кусок конфигурации

     #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
       " vim: filetype=vifm :
       " Sample configuration file for vifm (last updated: 20 July, 2018)
       " You can edit this file by hand.
       " The " character at the beginning of a line comments out the line.
       " Blank lines are ignored.
       " The basic format for each item is shown with an example.

       " ------------------------------------------------------------------------------

       " This is the actual command used to start vi.  The default is vim.
       " If you would like to use another vi clone such as Elvis or Vile
       " you will need to change this setting.

       set vicmd=vim
       " set vicmd=elvis\ -G\ termcap
       " set vicmd=vile

       " This makes vifm perform file operations on its own instead of relying on
       " standard utilities like `cp`.  While using `cp` and alike is a more universal
       " solution, it's also much slower when processing large amounts of files and
       " doesn't support progress measuring.

       set syscalls

       " Trash Directory
       " The default is to move files that are deleted with dd or :d to
       " the trash directory.  If you change this you will not be able to move
       " files by deleting them and then using p to put the file in the new location.
       " I recommend not changing this until you are familiar with vifm.
       " This probably shouldn't be an option.

       set trash

       " This is how many directories to store in the directory history.

       set history=100

       " Automatically resolve symbolic links on l or Enter.

       set nofollowlinks

       " With this option turned on you can run partially entered commands with
       " unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

       " set fastrun

       " Natural sort of (version) numbers within text.

       set sortnumbers

       " Maximum number of changes that can be undone.

       set undolevels=100

       " If you installed the vim.txt help file set vimhelp.
       " If would rather use a plain text help file set novimhelp.

       set novimhelp

       " If you would like to run an executable file when you
       " press return on the file name set this.

       set norunexec

       " Selected color scheme

       colorscheme Default

       " Format for displaying time in file list. For example:
       " TIME_STAMP_FORMAT=%m/%d-%H:%M
       " See man date or man strftime for details.

       set timefmt=%m/%d\ %H:%M

       " Show list of matches on tab completion in command-line mode

       set wildmenu

       " Display completions in a form of popup with descriptions of the matches

       set wildstyle=popup

       " Display suggestions in normal, visual and view modes for keys, marks and
       " registers (at most 5 files).  In other view, when available.

       set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

       " Ignore case in search patterns unless it contains at least one uppercase
       " letter

       set ignorecase
       set smartcase

       " Don't highlight search results automatically

       set nohlsearch

       " Use increment searching (search while typing)
       set incsearch

       " Try to leave some space from cursor to upper/lower border in lists

       set scrolloff=4

       " Don't do too many requests to slow file systems

       if !has('win')
           set slowfs=curlftpfs
       endif

       " Set custom status line look

       set statusline="  Hint: %z%= %A %10u:%-7g %15s %20d  "

       " ------------------------------------------------------------------------------

       " :mark mark /full/directory/path [filename]

       mark b ~/bin/
       mark h ~/

       " ------------------------------------------------------------------------------
     #+END_SRC

**** замечания о формате

     #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
       " :com[mand][!] command_name action
       " The following macros can be used in a command
       " %a is replaced with the user arguments.
       " %c the current file under the cursor.
       " %C the current file under the cursor in the other directory.
       " %f the current selected file, or files.
       " %F the current selected file, or files in the other directory.
       " %b same as %f %F.
       " %d the current directory name.
       " %D the other window directory name.
       " %m run the command in a menu window
     #+END_SRC

**** пользовательские команды

     #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
       command! df df -h %m 2> /dev/null
       command! diff vim -d %f %F
       command! zip zip -r %f.zip %f
       command! run !! ./%f
       command! make !!make %a
       command! mkcd :mkdir %a | cd %a
       command! vgrep vim "+grep %a"
       command! reload :write | restart
     #+END_SRC

**** ассоциации файлов
     
***** предварительные замечания

      #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
        " The file type is for the default programs to be used with
        " a file extension.
        " :filetype pattern1,pattern2 defaultprogram,program2
        " :fileviewer pattern1,pattern2 consoleviewer
        " The other programs for the file type can be accessed with the :file command
        " The command macros %f, %F, %d, %F may be used in the commands.
        " The %a macro is ignored.  To use a % you must put %%.

        " For automated FUSE mounts, you must register an extension with :file[x]type
        " in one of following formats:
        "
        " :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
        " %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
        " A sample line might look like this:
        " :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
        "
        " :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
        " %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
        " A sample line might look like this:
        " :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
        " %PARAM value is filled from the first line of file (whole line).
        " Example first line for SshMount filetype: root@127.0.0.1:/
        "
        " You can also add %CLEAR if you want to clear screen before running FUSE
        " program.
      #+END_SRC
     
***** Документы
      
****** pdf

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " Pdf
         filextype *.pdf zathura %c %i &, apvlv %c &, xpdf %c &
         fileviewer *.pdf pdftotext -nopgbrk %c -
       #+END_SRC

       
****** djvu

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " Djvu
         filextype *.djvu
                 \ {View in zathura}
                 \ zathura %f &,
                 \ {View in apvlv}
                 \ apvlv %f &,
       #+END_SRC
       
****** PostScript

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " PostScript
         filextype *.ps,*.eps,*.ps.gz
                 \ {View in zathura}
                 \ zathura %f,
                 \ {View in gv}
                 \ gv %c %i &,
       #+END_SRC

****** COMMENT fb2, epub

******* COMMENT fbreader

        неудалось настроить как следует
        
        #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
          " e-book

          filextype *.fb2, *.fb2.zip, *.epub
                  \ fbreader %c &,
                  \ cr3 %c &,
        #+END_SRC
      
******* coolreader

        #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
          filextype *.fb2, *.fb2.zip, *.epub cr3 %f &
        #+END_SRC
        
****** fb2

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         filextype *.fb2 fbreader %c &
       #+END_SRC
       
****** fb2.zip

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         filextype *.fb2.zip fbreader %f &
       #+END_SRC
       
****** epub

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         filextype *.epub fbreader %f &
       #+END_SRC
       
****** mobi

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         filextype *.mobi fbreader %c &
       #+END_SRC
       
****** офисные документы

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " Office files
         filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreoffice %f &
         fileviewer *.doc catdoc %c
         fileviewer *.docx docx2txt.pl %f -
       #+END_SRC

       
***** Мультимедиа

****** Audio
       
       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " Audio
         filetype *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus
                \ {Play using ffplay}
                \ ffplay -nodisp -autoexit %c,
                \ {Play using MPlayer}
                \ mplayer %f,
                \ {Play using mpv}
                \ mpv %f,
         fileviewer *.mp3 mp3info
         fileviewer *.flac soxi
       #+END_SRC

****** Video

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " Video
         filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
                  \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
                  \*.as[fx]
                 \ {View using ffplay}
                 \ ffplay -fs -autoexit %f,
                 \ {View using Dragon}
                 \ dragon %f:p,
                 \ {View using mplayer}
                 \ mplayer %f,
                 \ {View using mpv}
                 \ mpv %f,
         fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
                   \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
                   \*.as[fx]
                  \ ffprobe -pretty %c 2>&1
       #+END_SRC

****** Images

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " Images
         filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
                 \ {View in sxiv}
                 \ sxiv %d,
                 \ {View in gpicview}
                 \ gpicview %c,
                 \ {View in shotwell}
                 \ shotwell,
         fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
                  \ vifmimg draw %px %py %pv %ph %c
                  \ %pc
                  \ vifmimg clear
                  \ convert -identify %f -verbose /dev/null
       #+END_SRC
       
***** web

      #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
        " Web
        filextype *.html,*.htm
                \ {Open with dwb}
                \ dwb %f %i &,
                \ {Open with firefox}
                \ firefox %f &,
                \ {Open with uzbl}
                \ uzbl-browser %f %i &,
        filetype *.html,*.htm links, lynx
      #+END_SRC

***** разработка
      
****** haskell

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " Haskell src files
         filextype *.hs,*.lhs emacsclient -a  '' -c %f &
         fileviewer *.hs,*.lhs bat %c
       #+END_SRC

****** latex

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         filextype *.tex emacsclient -a '' -c %f &
       #+END_SRC
       
****** Org-mode

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " Org mode

         filextype *.org emacsclient -a '' -c %f &
         filetype *.org emacsclient -a '' -nw %f
       #+END_SRC
       
****** Qt проекты

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " Qt projects
         filextype *.pro qtcreator %f &
       #+END_SRC
       
****** объектные файлы

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " Object
         filetype *.o nm %f | less
       #+END_SRC


***** Контрольные суммы

      
****** MD5

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " MD5
         filetype *.md5
                \ {Check MD5 hash sum}
                \ md5sum -c %f %S,
       #+END_SRC

****** SHA1

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " SHA1
         filetype *.sha1
                \ {Check SHA1 hash sum}
                \ sha1sum -c %f %S,
       #+END_SRC

****** SHA256

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " SHA256
         filetype *.sha256
                \ {Check SHA256 hash sum}
                \ sha256sum -c %f %S,
       #+END_SRC

****** SHA512

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " SHA512
         filetype *.sha512
                \ {Check SHA512 hash sum}
                \ sha512sum -c %f %S,
       #+END_SRC

****** GPG

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " GPG signature
         filetype *.asc
                \ {Check signature}
                \ !!gpg --verify %c,
       #+END_SRC

       
***** архивы

      
****** zip

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " FuseZipMount
         filetype *.zip,*.jar,*.war,*.ear,*.oxt,*.apkg
                \ {Mount with fuse-zip}
                \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
                \ {View contents}
                \ zip -sf %c | less,
                \ {Extract here}
                \ tar -xf %c,
         fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c
       #+END_SRC

****** tar

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " ArchiveMount
         filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
                \ {Mount with archivemount}
                \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
         fileviewer *.tgz,*.tar.gz tar -tzf %c
         fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
         fileviewer *.tar.txz,*.txz xz --list %c
         fileviewer *.tar tar -tf %c
       #+END_SRC

****** rar

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " Rar2FsMount and rar archives
         filetype *.rar
                \ {Mount with rar2fs}
                \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
         fileviewer *.rar unrar v %c
       #+END_SRC
       
****** iso

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " IsoMount
         filetype *.iso
                \ {Mount with fuseiso}
                \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,
       #+END_SRC

****** 7zp

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " Fuse7z and 7z archives
         filetype *.7z
                \ {Mount with fuse-7z}
                \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
         fileviewer *.7z 7z l %c
       #+END_SRC
       
***** удаленка

      
****** ssh

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " SshMount
         filetype *.ssh
                \ {Mount with sshfs}
                \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,
       #+END_SRC

****** ftp

       #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
         " FtpMount
         filetype *.ftp
                \ {Mount with curlftpfs}
                \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,
       #+END_SRC

       
***** torrent

      #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
        " Torrent
        filetype *.torrent transmission-client %f &
        fileviewer *.torrent dumptorrent -v %c
      #+END_SRC

***** tudu

      #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
        " TuDu files
        filetype *.tudu tudu -f %c
      #+END_SRC
      
***** directories

      #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
        " Directories
        filextype */
                \ {View in thunar}
                \ Thunar %f &,
      #+END_SRC

**** неразобранный хвост конфигурации

     #+BEGIN_SRC conf :tangle ~/.config/vifm/vifmrc 
       " Syntax highlighting in preview
       "
       " Explicitly set highlight type for some extensions
       "
       " 256-color terminal
       " fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
       " fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c
       "
       " 16-color terminal
       " fileviewer *.c,*.h highlight -O ansi -s dante %c
       "
       " Or leave it for automatic detection
       "
       " fileviewer *[^/] pygmentize -O style=monokai -f console256 -g

       " Displaying pictures in terminal
       "
       " fileviewer *.jpg,*.png shellpic %c

       " Open all other files with default system programs (you can also remove all
       " :file[x]type commands above to ensure they don't interfere with system-wide
       " settings).  By default all unknown files are opened with 'vi[x]cmd'
       " uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
       " for unknown file types.
       " For *nix:
       " filetype * xdg-open
       " For OS X:
       " filetype * open
       " For Windows:
       " filetype * start, explorer

       " ------------------------------------------------------------------------------

       " What should be saved automatically between vifm runs
       " Like in previous versions of vifm
       " set vifminfo=options,filetypes,commands,bookmarks,dhistory,state,cs
       " Like in vi
       set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
           \phistory,fhistory,dirstack,registers,bookmarks,bmarks

       " ------------------------------------------------------------------------------

       " Examples of configuring both panels

       " Customize view columns a bit (enable ellipsis for truncated file names)
       "
       " set viewcolumns=-{name}..,6{}.

       " Filter-out build and temporary files
       "
       " filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

       " ------------------------------------------------------------------------------

       " Sample mappings

       " Start shell in current directory
       nnoremap s :shell<cr>

       " Display sorting dialog
       nnoremap S :sort<cr>

       " Toggle visibility of preview window
       nnoremap w :view<cr>
       vnoremap w :view<cr>gv

       " Open file in existing instance of gvim
       nnoremap o :!gvim --remote-tab-silent %f<cr>
       " Open file in new instance of gvim
       nnoremap O :!gvim %f<cr>

       " Open file in the background using its default program
       nnoremap gb :file &<cr>l

       " Yank current directory path into the clipboard
       nnoremap yd :!echo %d | xclip %i<cr>

       " Yank current file path into the clipboard
       nnoremap yf :!echo %c:p | xclip %i<cr>

       " Mappings for faster renaming
       nnoremap I cw<c-a>
       nnoremap cc cw<c-u>
       nnoremap A cw

       " Open console in current directory
       nnoremap ,t :!xterm &<cr>

       " Open editor to edit vifmrc and apply settings after returning to vifm
       nnoremap ,c :write | edit $MYVIFMRC | restart<cr>
       " Open gvim to edit vifmrc
       nnoremap ,C :!gvim --remote-tab-silent $MYVIFMRC &<cr>

       " Toggle wrap setting on ,w key
       nnoremap ,w :set wrap!<cr>

       " Example of standard two-panel file managers mappings
       nnoremap <f3> :!less %f<cr>
       nnoremap <f4> :edit<cr>
       nnoremap <f5> :copy<cr>
       nnoremap <f6> :move<cr>
       nnoremap <f7> :mkdir<space>
       nnoremap <f8> :delete<cr>

       " ------------------------------------------------------------------------------

       " Various customization examples

       " Use ag (the silver searcher) instead of grep
       "
       " set grepprg='ag --line-numbers %i %a %s'

       " Add additional place to look for executables
       "
       " let $PATH = $HOME.'/bin/fuse:'.$PATH

       " Block particular shortcut
       "
       " nnoremap <left> <nop>

       " Export IPC name of current instance as environment variable and use it to
       " communicate with the instance later.
       "
       " It can be used in some shell script that gets run from inside vifm, for
       " example, like this:
       "     vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"
       "
       " let $VIFM_SERVER_NAME = v:servername
     #+END_SRC
      

     
*** Вспомогательные скрипты

    
**** vifmimg

     просмотр изображений с помощью пайтоновского скрипта ueberzug

     не работает пока чтою вероятно проблема с самим ueberzug
     #+BEGIN_SRC conf :tangle ~/.config/vifm/scripts/vifmimg
       #!/usr/bin/env sh
       readonly ID_PREVIEW="preview"

       #AUTO_REMOVE="yes"
       # By enabling this option the script will remove the preview file after it is drawn
       # and by doing so the preview will always be up-to-date with the file.
       # This however, requires more CPU and therefore affects the overall performance.

       if [ -e "$FIFO_UEBERZUG" ]; then
           if [[ "$1" == "draw" ]]; then
               declare -p -A cmd=([action]=add [identifier]="$ID_PREVIEW"
                                  [x]="$2" [y]="$3" [width]="$4" [height]="$5" \
                                  [path]="${PWD}/$6") \
                   > "$FIFO_UEBERZUG"

           elif [[ "$1" == "videopreview" ]]; then
               echo -e "Loading preview..\nFile: $6"
               [[ ! -d "/tmp${PWD}/$6/" ]] && mkdir -p "/tmp${PWD}/$6/"
               [[ ! -f "/tmp${PWD}/$6.png" ]] && ffmpegthumbnailer -i "${PWD}/$6" -o "/tmp${PWD}/$6.png" -s 0 -q 10
               declare -p -A cmd=([action]=add [identifier]="$ID_PREVIEW"
                                  [x]="$2" [y]="$3" [width]="$4" [height]="$5" \
                                  [path]="/tmp${PWD}/$6.png") \
                   > "$FIFO_UEBERZUG"

           elif [[ "$1" == "gifpreview" ]]; then
               echo -e "Loading preview..\nFile: $6"
               [[ ! -d "/tmp${PWD}/$6/" ]] && mkdir -p "/tmp${PWD}/$6/" && convert -coalesce "${PWD}/$6" "/tmp${PWD}/$6/$6.png"
               for frame in $(ls -1 /tmp${PWD}/$6/$6*.png | sort -V); do
                  declare -p -A cmd=([action]=add [identifier]="$ID_PREVIEW"
                                  [x]="$2" [y]="$3" [width]="$4" [height]="$5" \
                                  [path]="$frame") \
                   > "$FIFO_UEBERZUG"
                   # Sleep between frames to make the animation smooth.
                   sleep .07
               done

           elif [[ "$1" == "pdfpreview" ]]; then
               echo -e "Loading preview..\nFile: $6"
               [[ ! -d "/tmp${PWD}/$6/" ]] && mkdir -p "/tmp${PWD}/$6/"
               [[ ! -f "/tmp${PWD}/$6.png" ]] && pdftoppm -png -singlefile "$6" "/tmp${PWD}/$6"
               declare -p -A cmd=([action]=add [identifier]="$ID_PREVIEW"
                                  [x]="$2" [y]="$3" [width]="$4" [height]="$5" \
                                  [path]="/tmp${PWD}/$6.png") \
                   > "$FIFO_UEBERZUG"

           elif [[ "$1" == "clear" ]]; then
               declare -p -A cmd=([action]=remove [identifier]="$ID_PREVIEW") \
                   > "$FIFO_UEBERZUG"
               [[ ! -z $AUTO_REMOVE ]] && [[ -f "/tmp${PWD}/$6.png" ]] && rm -f "/tmp${PWD}/$6.png"
               [[ ! -z $AUTO_REMOVE ]] && [[ -d "/tmp${PWD}/$6/" ]] && rm -rf "/tmp${PWD}/$6/"

           fi
       fi
     #+END_SRC

     #+BEGIN_SRC shell
       chmod +x ~/.config/vifm/scripts/vifmimg
     #+END_SRC

     #+RESULTS:
